# Auto detect text files and perform LF normalization
* text=auto
print("hello world")
#def factorial(n):
#    if n==0 or n==1:
#        return 1
#    else:
#        return n*factorial(n-1)
#try:
#    num=int(input("enter a number to find its factorial: - "))
#    if num<0:
#        print("please write a non negative number ")
#    else:
#        result=factorial(num)
#        print(f"The factorial of {num} is: {result}")
#except ValueError:
#    print("invalid input.please enter a integer not a character")




# p = int(input("Enter a number to check whether it's prime or composite: "))

# if p < 2:
#     print("It's neither prime nor composite.")
# elif p == 2:
#     print("It's a prime number.")
# elif p % 2 == 0:
#     print("It's a composite number.")
# else:
#     is_prime = True
#     for i in range(3, int(p**0.5) + 1, 2):
#         if p % i == 0:
#             is_prime = False
#             break

#     if is_prime:
#         print("It's a prime number.")
#     else:
#         print("It's a composite number.")






# import random
# def random_no():
#     return print(random.randint(1,6))
# while True:
#     random_no()
#     break  




# def pap(*n):
#     product = 1
#     power = 1

#     for i in range(1,11):
#         product = i*i
#         power = i**i

#     return print(product) , print(power)

# pap()


def days_to_weeks(days):
    try:
        days = int(days)
        weeks = days // 7
        print(f"{days} days is approximately {weeks} weeks.")
    except ValueError:
        print("Error: Input is not an integer.")
    finally:
        print("Program executed.")

days = input("Enter the number of days: ")

days_to_weeks(days)
